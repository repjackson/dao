template(name='post_card')
    .ui.card
        a.image(href="/post/#{_id}/view")
            if is_youtube
                .ui.embed(data-source="youtube" data-id=youtube_parse class=currentUser.invert_class)
        
            // else if rd.thumbnail.length
            //     unless is_image
            //         img.ui.image(src=rd.thumbnail class=currentUser.invert_class)    
            if watson.metadata.image
                img.ui.image(src=watson.metadata.image class=currentUser.invert_class) 
            if reddit_image
                // |reddit image
                img.ui.image(src=reddit_image class=currentUser.invert_class)   
            if is_image
                img.ui.image(src=url class=currentUser.invert_class)    
        if youtube_id
            +youtube_view key='youtube_id' direct=true
        else if image_id
            a.image(href="/post/#{_id}/view")
                img.ui.image(src="{{c.url image_id }}" class=currentUser.invert_class)
        // img.invert(src=url)
                
        // else if image_link
        //     img.ui.rounded.image(src=image_link class=currentUser.invert_class)
                
        .content
            a.header(href="/post/#{_id}/view")
                i.right.chevron.circular.icon
                |#{title}
            +vote
            .ui.label #{points}
        if is_admin
            +print_this
        // .meta
        //     |#{when}
        // .content
        //     a.meta(href=)
        //         |by 
        //         if _author.profile_image_id
        //             img.ui.avatar.compact.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        //         |#{_author.username}
            // +multi_user_view key='coauthor_ids' label='coauthors' direct=true

            // .description
            //     .ui.basic.label
            //         i.donate.icon
            //         |#{tip_count} tips
            //     .ui.basic.label
            //         i.chat.outline.icon
            //         |#{comment_count} comments
                
            //     |!{blurb}
            //     each seven_tags
            //         .ui.basic.label #{this}
            //     // +comments_view_small   
        
    // .ui.divider
    
template(name='one_post_view')
    .ui.fluid.card.view_post
        if youtube_id
            +youtube_view key='youtube_id' direct=true
        if is_youtube
            +youtube_view key='url' direct=true
        else if image_id
            a.image(href="/post/#{_id}/view")
                img.ui.image(src="{{c.url image_id width=1000 crop='fill'}}" class=currentUser.invert_class) 
        else
            a.image(href="/post/#{_id}/view")
                img.ui.image(src=watson.metadata.image class=currentUser.invert_class)    
 
        .content
            a.inline.header(href="/post/#{_id}/view")
                i.right.chevron.circular.icon
                |#{title}
            a.meta(href="/user/#{_author.username}/")
                |by 
                if _author.profile_image_id
                    img.ui.avatar.compact.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                |#{_author.username}
                
            .meta
                |#{when}
            .description
                +tone
                |!{description}
                |!{body}
                // |!{analyzed_text}
            .description
                .ui.basic.label
                    i.donate.icon
                    |#{tip_count}
                .ui.basic.label
                    i.chat.outline.icon
                    |#{comment_count}
                
                |!{blurb}
                each tags
                    .ui.compact.large.circular.button.add_tag #{this}
                +comments_view_small  
            // +voting
            +vote
    // .ui.divider

template(name='post_view')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .twelve.wide.column.scrolling
                    .ui.center.aligned.header 
                        |#{title}
                    img.invert(src=url)
                    each preview.images 
                        img(src=source.url)
                    if is_youtube
                        .ui.embed.rounded(data-source="youtube" data-id=youtube_parse class=currentUser.invert_class)
                        // +youtube_view key='url' direct=true full=true
                    // with rd.media_embed
                    //     |!{content}
        
                    // +session_edit_value_button key='view_post_section' value='related' label='related' icon='fork'
                    if session_key_value_is 'view_post_section' 'content'
                        if image_id
                            img.ui.rounded.image(src="{{c.url image_id gravity='face' crop='fit'}}" class=currentUser.invert_class)
                        if image_link
                            img.ui.rounded.image(src=image_link class=currentUser.invert_class)
                        if youtube_id
                            +youtube_view key='youtube_id' direct=true
                            i.large.tag.icon
                        // each tags 
                        //     .ui.compact.large.circular.button.add_tag #{this}
                        // a.image(href="/post/#{_id}/view")
                        //     img.ui.image(src=watson.metadata.image class=currentUser.invert_class)    
                        a.ui.small.header(href=url target='_window') #{url}
                     
                        .f12
                            |!{description}
                            |!{body}
                            +tone
                        // a.ui.header(href="/user/#{target.username}")
                        //     img.ui.avatar.image(src="{{c.url target.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                        //     |#{target.username}
                        // each tags 
                        //     .ui.compact.large.circular.button.add_tag #{this}
                    if tone
                        if session_key_value_is 'view_post_section' 'tone'
                            +tone
                    
                    if watson
                        if session_key_value_is 'view_post_section' 'analysis'
                            .spacer
                            i.large.tag.icon
                            .spacer
                            +watson_view
                    if session_key_value_is 'view_post_section' 'comments'
                        +comments
                    .spacer
                .four.wide.column.scrolling
                    // .ui.inline.header 
                    //     small post: 
                    // a.ui.circular.icon.button(href='/')
                    //     i.yin.yang.large.icon
                    img.ui.rounded.image(src=watson.metadata.image class=currentUser.invert_class)    
                    img.ui.rounded.image(src=rd.thumbnail class=currentUser.invert_class)    
                    
                    +session_edit_value_button key='view_post_section' value='content' label='content' icon='content'
                    if tone
                        +session_edit_value_button key='view_post_section' value='tone' label='tone' icon='smile'
                    if watson
                        +session_edit_value_button key='view_post_section' value='analysis' label='analysis' icon='dna'
                    +session_edit_value_button key='view_post_section' value='comments' label='comments' icon='chat'
                    .spacer
                    if can_edit
                        a.ui.circular.icon.button.edit_post(href="/post/#{_id}/edit")
                            i.large.pencil.icon
                    div
                    if url
                        +call_watson mode='url'
                    // .ui.small.inline.header by
                    // a.ui.header(href="/user/#{_author.username}") 
                    //     img.ui.avatar.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                    //     |#{_author.username}
                    .ui.inline.small.header #{when}
                    div
                    // +voting
                    +vote
                    div
                    +array_view key='location_tags' label='location tags' direct=true
                    div
                    +date_view key='date' label='date' direct=true
                    div
                    // +single_user_view key='_author_id' label='author' direct=true
                    // +multi_user_view key='coauthor_ids' label='coauthors' direct=true
                    .ui.label #{views} views
                    // .ui.large.label #{total_points}p generated
                    // .ui.inline.header(data-position='left center' data-tooltip="tips cost 11p, pay author(s) 10p, are nonrefundable, and allow full data access and commenting")
                    //     // i.coins.icon
                    //     |#{tip_total}p tipped
                    // .ui.green.big.icon.circular.button.tip
                    //     i.donate.icon
                    //     // |tip
                    .ui.link.selection.list
                        .ui.fluid.accordion 
                            each votes
                                .title
                                    a.ui.inline.header(href="/user/#{_author.username}") 
                                        |#{points}
                                        img.ui.avatar.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                                        |#{_author.username}
                                    each _author.three_tags
                                        .ui.small.basic.label #{this}
                                    // i.dropdown.icon
                                // .content
                                //     .ui.list.smallscroll
                                //         each tipper_tips
                                //             .item 
                                //                 |{{home_long_date _timestamp}} 
                                //                 div
                                //                 |#{when} 
                    // if watson 
                    //     +watson_view
                    each tags 
                        .ui.compact.circular.button.add_tag #{this}
                    
                    +print_this
                 
template(name='post_section_button')                 
    .ui.circular.compact.button 
        if icon 
            i.icon(class=icon)
        |#{label}

template(name='post_edit')
    with current_doc
        .ui.stackable.padded.grid
            .row 
                .twelve.wide.column
                    div
                    +text_edit key='title' icon='header' direct=true
                    +html_edit key='description' label='description' direct=true
                    div
                    if watson
                        +watson_view
                    // +array_edit key='tags' label='tags' icon='tags' direct=true
                .four.wide.column
                    a.ui.green.icon.circular.large.button(href="/post/#{_id}/view" title='save' class=currentUser.invert_class)
                        i.checkmark.big.icon
                    .ui.inline.large.header 
                        small edit post:
                        |#{title}
                    i.remove.link.circular.icon.delete_post(title='delete post')
                    |coauthors split revenue evenly
                    +multi_user_edit key='coauthor_ids' key2='coauthor_usernames' label='coauthors' direct=true
                    .ui.header 
                        small author
                        |#{_author.username}
                    .spacer
                    +youtube_edit key='youtube_id' label='youtube id' direct=true
                    // .spacer
                    // +date_edit key='date' label='date' direct=true
                    +smart_tagger
                    .spacer
                    if is_admin
                        +single_user_edit key='_author_id' key2='_author_username' direct=true
                    div
                    +image_edit key='image_id' label='image upload' direct=true
                    +text_edit key='source' label='source' direct=true
                    // div 
                    // +image_link_edit key='image_link' label='image link' direct=true
                    
                    // +boolean_edit key='private' direct=true
                    // if private
                    //     +multi_user_edit key='viewable_user_ids' key2='viewable_user_usernames' label='viewable by' direct=true
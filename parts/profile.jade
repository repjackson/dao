template(name='profile_layout')
    +nav
    .ui.bottom.attached.pushable.segment(class='invert')
        // +top_sidebar
        // +left_sidebar
        // +right_sidebar
        // #main_area.global_container.pusher
        #main_area.global_container.pusher
            // .adventure-vid.w-background-video.w-background-video-atom(class='invert' data-poster-url='https://uploads-ssl.webflow.com/5d4a237a79c912a1ef797ef2/5d64a7daca4f1a1c19bc8fae_galaxy bg loop-poster-00001.jpg', data-video-urls='https://uploads-ssl.webflow.com/5d4a237a79c912a1ef797ef2/5d64a7daca4f1a1c19bc8fae_galaxy bg loop-transcode.mp4,https://uploads-ssl.webflow.com/5d4a237a79c912a1ef797ef2/5d64a7daca4f1a1c19bc8fae_galaxy bg loop-transcode.webm', data-autoplay='true', data-loop='true', data-wf-ignore='true')
            // video(autoplay='', loop='', style='background-image:url("https://uploads-ssl.webflow.com/5d4a237a79c912a1ef797ef2/5d64a7daca4f1a1c19bc8fae_galaxy bg loop-poster-00001.jpg")', muted='', playsinline='', data-wf-ignore='true', data-object-fit='cover')
            //     source(src='https://uploads-ssl.webflow.com/5d4a237a79c912a1ef797ef2/5d64a7daca4f1a1c19bc8fae_galaxy bg loop-transcode.mp4', data-wf-ignore='true')
            //     source(src='https://uploads-ssl.webflow.com/5d4a237a79c912a1ef797ef2/5d64a7daca4f1a1c19bc8fae_galaxy bg loop-transcode.webm', data-wf-ignore='true')
    
                
            with user
                .ui.stackable.padded.grid
                    .three.wide.column
                        // a.ui.big.icon.button(href="/")
                        //     i.large.yin.yang.icon
                        span.mobile.only
                            a(href="/user/#{username}/")
                                img.ui.centered.tiny.inline.spaced.circular.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class='invert')
                        span.mobile.hidden
                            a(href="/user/#{username}/")
                                img.ui.centered.fluid.circular.pointer.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class='invert') 
                        a.ui.big.header.refresh_user_stats(href="/user/#{username}") 
                            |@#{username}
                        if is_admin
                            a.ui.large.button(href="/user/#{username}/edit" title='admin edit account')
                                i.shield.large.icon
                                |account
                        if is_current_user
                            a.ui.circular.button(href="/user/#{username}/edit" title='edit your account')
                                i.cog.big.icon
                                |account
                            a.ui.circular.button.logout(href="#" title='log out')
                                i.sign.out.big.icon
                                |log out
                        
                        // .ui.header $#{credit} credit
                        .ui.inline.header #{points}p
                        // .ui.compact.icon.button.refresh_user_stats(title='refresh stats')
                        //     i.refresh.icon
                        if is_dev
                            .ui.inline.header #{_id}
        
                        unless is_current_user
                            if currentUser
                                // div
                                +user_friend_button 
                        if i_have_points
                            .ui.button.send(title='send points')
                                i.send.large.icon
                                span send pts
                        // if is_current_user
                        //     a.ui.large.compact.button.select_term.profile_nav_item(href="/user/#{username}/credit" class="{{isActiveRoute 'user_credit'}}" title="#{user.username} credit")
                        //         // i.large.dollar.icon
                        //         span credit
                        if is_dev
                            +print_this
                    .thirteen.wide.column.profile_yield
                        +yield    
                      





template(name='user_friend_button')
    if is_friend
        .ui.blue.button.unfriend(title='unfriend')
            i.checkmark.large.icon
            |friends
    else
        .ui.button.friend(title='friend')
            i.user.plus.large.icon
            |friend




template(name='user_dashboard')
    // +user_about
    // .ui.hidden.divider
    .ui.stackable.grid
        .row
            .sixteen.wide.column
                .ui.header upvoted overlap 
                .ui.three.column.grid
                    .column
                        .ui.header you #{currentUser.total_upvoted_points}
                        each currentUser.upvoted_tags
                            a.ui.large.label.select_tag #{title}
                                small #{count}
                    .column
                        .ui.header union
                        each overlap_results
                            a.ui.huge.label.select_tag #{name}
                                small #{count}
                    .column
                        .ui.header them
                        each friended_by
                            a.ui.small.compact.button.select_user(class=friend_button_class)
                                |#{username}
                        each current_user.upvoted_tags
                            a.ui.large.label.select_tag #{title}
                                small #{count}
            .sixteen.wide.column
                +user_friends
        // .row
        //     .sixteen.wide.column
        //         .ui.header authored overlap 
        //         .ui.three.column.grid
        //             .column
        //                 .ui.header them
        //                 each current_user.authored_tags
        //                     .ui.label #{title}:#{count}
        //             .column
        //                 .ui.header union
        //                 each overlap
        //                     .ui.label #{name}: #{count}
        //             .column
        //                 .ui.header you #{currentUser.total_authored_points}
        //                 each currentUser.authored_tags
        //                     .ui.label #{title}:#{count}
        // .row
        //     // if is_dao
        //     //     .four.wide.column
        //     //         .ui.header tax collected
        //     //         .ui.list
        //     //             each user_orders 
        //     //                 .item 
        //     //                     .content
        //     //                         .header #{order_offer.title}
        //     //                         |#{when}, #{purchase_price}c
        //     .eight.wide.column                 
        //         a.ui.inline.header(href="/user/#{username}/credits")
        //             i.chevron.down.large.icon
        //             |#{credit_count} credits
        //         | (#{total_credit_amount}p)
        //         .ui.label #{total_credit_amount}p total received
        //         // |received
        //         .ui.label(title='received count') #{credit_count} total gifts 
        //         .ui.label(title='rank') #{global_credit_count_rank} count rank
                    
        //         i.tags.icon(title='credit tags')
        //         each credit_tags
        //             .ui.circular.label #{title}
        //                 | #{count}
        //             #{count}
        //         scroll.ui.segments
        //             each user_credits
        //                 +user_credit_segment
        //         .ui.hidden.divider
        //     .eight.wide.column
        //         a.ui.inline.spaced.header(href="/user/#{username}/debits")
        //             i.chevron.up.icon
        //             |#{debit_count} debits
        //             |(#{total_debit_amount}p)
        //             .ui.label #{total_debit_amount}p total sent
        //             .ui.label(title='debit count') #{debit_count} gifts sent
        //             .ui.label(title='rank') #{global_debit_count_rank} gift sent rank
                        
        //             i.tags.icon(title='credit tags')
        //             each debit_tags
        //                 .ui.circular.label #{title}
        //                     |#{count}
        //             //(title='rank') ##{global_debit_count_rank}
        //         // i.tags.icon(title='credit tags')
        //         each debit_tags
        //             .ui.circular.label #{title} 
        //             // #{count}
    +user_credit
                
                
                        
template(name='user_credit_segment')
    .ui.segment.user_credit_segment.pointer.zoom
        if image_id
            img.ui.fluid.image(src="{{c.url image_id height=200 width=300 gravity='face' crop='fill'}}" class='invert')
        .header
            strong #{amount}pt 
            // |from 
            if author.profile_image_id
                img.ui.avatar.image(src="{{c.url author.profile_image_id height=200 width=300 gravity='face' crop='fill'}}" class='invert')
            |#{_author.username}
     #{when}
        div
        |#{description}
        div
        each tags
            .ui.mini.label #{this}


template(name='user_debit_segment')
    .ui.segment.user_debit_segment.pointer.zoom
        if image_id
            img.ui.fluid.image(src="{{c.url image_id height=200 width=300 gravity='face' crop='fill'}}" class='invert')
        .header
            strong #{amount}pt
            | to 
            if recipient.profile_image_id
                img.ui.avatar.image(src="{{c.url recipient.profile_image_id height=200 width=300 gravity='face' crop='fill'}}" class='invert')
            |#{recipient.username}
     #{when}
        div
        |#{description}
        div
        each tags
            .ui.mini.label #{this}

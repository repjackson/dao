head
    title dao
    // meta(name='viewport', content='user-scalable=yes, initial-scale=1.0, maximum-scale=1.4, width=device-width')
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="black")
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")
    // link(href="https://fonts.googleapis.com/css?family=Roboto:300,400&display=swap" rel="stylesheet")
    //- script(src="https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js")

    link(rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")
    link(rel="manifest" href="/site.webmanifest")

    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')

    link(rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.css")
    script(src="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.js")
    script(async src="https://www.googletagmanager.com/gtag/js?id=UA-156965333-1")

    // script(async='' src='https://platform.twitter.com/widgets.js' charset='utf-8')

    // script(src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")

    script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-156965333-1');



body
    +status
    +home
    

template(name='home')
    .ui.stackable.padded.grid
        .row
            .sixteen.wide.column
                i#clear_tags.link.yin.yang.big.icon(class=loading_class)
                if selected_tags
                    if many_tags
                        a#clear_tags.ui.black.icon.small.compact.circular.button.select_term
                            i.remove.icon
                    each selected_tags
                        +unselect_tag
                .ui.left.icon.inline.input 
                    i.search.icon
                    input.search_title(type='text' autofocus='')
                each tag_results
                    +tag_selector
        .row
            .five.wide.right.aligned.column.scrolling
                +view_mode key='twitter' icon='twitter' color='blue'
                +view_mode key='video' icon='youtube' color='red'
                +view_mode key='image' icon='picture' color='green'
                +view_mode key='reddit' icon='reddit' color='teal'
                +view_mode key='wikipedia' icon='wikipedia' color='purple'
                +view_mode key='stackexchange' icon='stack exchange'
                +view_mode key='github' icon='github'
                +view_mode key='alpha' icon='disabled brain'
                +view_mode key='porn' icon='mercury'
                .spacer
                +emotion_mode key='joy' icon='happy--v1'
                +emotion_mode key='sadness' icon='sad--v1'
                +emotion_mode key='anger' icon='angry--v1'
                +emotion_mode key='disgust' icon='disgusting'
                +emotion_mode key='fear' icon='scream'
                .spacer
                .ui.inline.header 
                    i.reddit.large.icon
                    |groups
                each selected_subreddits
                    .ui.black.circular.compact.button.unselect_subreddit
                        |#{this}
                each subreddit_results
                    .ui.compact.circular.basic.button.select_subreddit
                        |#{name}
                .spacer
                .ui.inline.header 
                    i.smile.large.icon
                    |main emotion
                    
                each selected_emotions
                    .ui.black.circular.compact.button.unselect_emotion
                        |#{this}
                each emotion_results
                    .ui.compact.circular.basic.button.select_emotion
                        |#{name}
                .spacer
                .ui.inline.header 
                    i.database.large.icon
                    |sources
                each selected_models
                    .ui.black.circular.compact.button.unselect_model
                        |#{this}
                each model_results
                    .ui.compact.circular.basic.button.select_model
                        |#{name}
                // i.smile.large.icon
                div
                each alphas
                    if response.queryresult
                        +alpha 
                if many_tags
                    each alpha_singles
                        if response.queryresult
                            +alpha 
                each ducks
                    +duck 
                // .five.wide.column.scrolling
                // each docs
            .ten.wide.column
                .ui.basic.circular.label(title='results') #{doc_count}
                .ui.button
                    |sort
                .ui.button
                    i.list.icon
                .ui.button
                    i.th.icon
                .ui.stackable.padded.grid.scrolling
                    .ui.items
                        each docs
                            if key_value 'model' 'porn'
                                +vid_card
                            else
                                .ui.item
                                    if watson.metadata.image
                                        img.ui.rounded.inline.small.pointer.zoomer.image.toggle_view(src=watson.metadata.image)    
                                    .content
                                        a.ui.header.toggle_view #{title}
                                    
                                        if viewing_doc
                                            if key_value 'model' 'reddit'
                                                +reddit
                                            unless one_post
                                                i.chevron.left.big.circular.grey.link.icon.back
                                            i.thumbs.up.outline.big.grey.link.circular.icon.vote_up
                                            |#{points}
                                            i.thumbs.down.outline.big.grey.link.circular.icon.vote_down
                                            unless one_post
                                                i.chevron.right.big.circular.grey.link.icon.forward
                                            unless key_value 'model' 'reddit'
                                                // if watson.metadata.image
                                                //     img.ui.rounded.inline.small.image(src=watson.metadata.image)    
                                                if is_image
                                                    img.ui.centered.image(src=url)
                                                a.ui.center.aligned.header(href=url target='_window' class=post_header_class title=url) #{title}
                    
                                            // .spacer
                                            // div
                                            // +session_edit_value_button key='view_section' value='content' label='content' icon='content'
                                            // if watson
                                            //     .medscroll
                                            //         +watson_view
                                            if tone
                                                +tone
                                            //     +session_edit_value_button key='view_section' value='tone' label='tone' icon='smile'
                                            if session_key_value_is 'view_section' 'content'
                                                +post
                                            // else
                                            // if session_key_value_is 'view_section' 'preview'
                                            // // .column
                                            // //     .rounded
                                            // //         iframe.rounded(width="100%" height="500" src=url frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
                                            // .column
                                            each tags
                                                +doc_tag
                                            +call_watson
                                            if watson    
                                                +call_tone    
                                            |#{tags.length}
                                            .ui.transparent.input
                                                i.plus.grey.icon
                                                input.tag_post(type='text')
                                            i.code.link.icon.print_me
            
        // .one.column.row
        //     .column
        //         +chat
                    
                
template(name='chat')                
    // .ui.inline.header chat
    i.big.chat.outline.icon(title='chat')
    each chats
        // if bot
        //     i.grey.brain.icon 
        |#{response.result} #{body}
        // i.pencil.icon
        // .ui.segment
        |&nbsp;
        |&nbsp;
        // .comment
        //     .content
        //         // .meta #{_timestamp}
    // .spacer
    .ui.icon.input 
        i.chat.outline.icon
        input.new_chat(type='text')

template(name='view_mode')
    i.link.zoomer.icon.toggle_view(class=toggle_view_class title=key)


template(name='emotion_mode')
    if selected_emotion
        img.ui.inline.image.toggle_emotion.zoomer.pointer(src="https://img.icons8.com/color/50/000000/#{icon}.png" class=cl title=title)
    else
        img.ui.inline.image.toggle_emotion.zoomer.pointer(src="https://img.icons8.com/ios/36/000000/#{icon}.png" class=cl title=title)

    
template(name='post')         
    // .ui.fluid.
    // if watson.metadata.image
    //     img.ui.rounded.inline.medium.image(src=watson.metadata.image)    
    // else
    //     img.ui.image(src=url)
    if watson.metadata.image
        img.ui.rounded.inline.image(src=watson.metadata.image)    
    
    // .rounded
    //     iframe.rounded(width="100%" height="500" src=url frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
    // if tone
    //     +tone
    // // iframe(width="100%" height="500" src="https://en.m.wikipedia.org/wiki/#{title}" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
    // if watson 
    //     +call_tone
    //     .medscroll.mobile.hidden
    //         +watson_view

template(name='session_edit_value_button')
    // .ui.circular.compact.button.set_session_value(class=calculated_class)
    a.ui.big.icon.circular.button.set_session_value(class=calculated_class)
        i.icon(class=icon)
        // +i name=icon cl='ui avatar image'
        // if label
        //     |#{label}
        // else 
        //     |#{value}


    
                    
template(name='pull_reddit')
    .ui.circular.icon.basic.button.pull
        i.reddit.icon
        
template(name='call_watson')
    .ui.circular.icon.basic.button.pull
        i.dna.icon

template(name='convert')
    .ui.circular.icon.basic.button.convert
        i.exchange.icon


template(name='unselect_tag')
    a.unselect_tag.ui.black.large.image.circular.label.select_term(href='#')
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image)    
        strong #{this}

template(name='tag_selector')
    a.ui.large.image.basic.circular.label.pointer.select_tag.select_term(href='#' title="#{count} results" class=selector_header_class)
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image)    
        | #{name}
        // small #{count}

template(name='doc_tag')
    a.ui.image.basic.small.circular.label.pointer.select_tag.select_term(href='#' title="#{count} results" class=selector_header_class)
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image)    
        | #{this}
        // small #{count}


template(name='reddit')
    // if watson.metadata.image
    //     img.ui.rounded.inline.small.image(src=watson.metadata.image)    
    if is_image
        img.ui.centered.image(src=url)
        // else if is_twitter
        //     blockquote.twitter-tweet(data-dnt='true' data-theme='dark')
        //         p(lang='en' dir='ltr')
        //             | Twitter Support you must have the patience of 1000 camels waiting for a drink of water while the baby camels get the first drinks...does that make sense? Thank you for your dedication and time you selfishly give to each of us. You are always appreciated.
        //         | — KayeMc76 (@KayeMc76) 
        //         a(href=url) October 3, 2020
    else if is_youtube
        div
        .ui.embed
        iframe(id="ytplayer" type="text/html" width="720" height="405" src="https://www.youtube.com/embed/M7lc1UVf-VE" frameborder="0" allowfullscreen)
        iframe(width="100%" height="600" src="https://www.youtube.com/embed/#{youtube_parse}?autoplay=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
    else if is_video
        div
        // iframe(width="100%" height="600" src="https://v.redd.it/9vk3khyb08e51/DASH_360.mp4?source=fallback" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
        iframe(width="100%" height="600" src=url frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
    else
        iframe(width="560" height="315" src=url frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)        

    |!{embed}
    // .medscroll
    // 
    a.ui.basic.circular.label(href="https://www.reddit.com#{permalink}" target="_window") r/#{subreddit}
    .ui.big.label 
        i.user.outline.icon
        |#{author}
    .ui.basic.circular.label
        i.thumbs.up.outline.icon
        |#{ups}
    .ui.inline.header
        | #{url}
    // .spacer
    // .nl2br
    // |!{html}
    // .spacer
    // pre
    // .nl2br
    // if viewing
    if parsed_selftext_html
        |!{parsed_selftext_html}
    else if selftext
        |{{nl2br selftext}}
    else if body
        div
        |{{nl2br body}}
    else if tone
        .spacer
        +tone
    // div(style='position:relative; padding-bottom:calc(125.00% + 44px)')
    //     iframe(src='https://gfycat.com/ifr/MeanFatAmurratsnake' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen)
    // |{{selftext}}
    // blockquote(class="reddit-card")
    //     a(href="https://www.reddit.com#{permalink}") 
    //         |#{title}
    //     |from 
    //     a(href="http://www.reddit.com/r/#{subreddit}") 
    //         |r/#{subreddit}
    // script(src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")
    +call_watson
    // if watson 
    //     +call_tone
    //     .medscroll.mobile.hidden
    //         +watson_view
    // +convert
    a.ui.circular.icon.button(href=url target='_window' title=domain)
        i.external.icon
        // |#{domain}
    // unless key_value 'domain'
    // if dev
    // iframe(width="100%" height="500" src="https://v.redd.it/seckv25qiir51" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
    // .ui.icon.circular.button.tagger
    //     i.dna.icon

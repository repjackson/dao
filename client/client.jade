head
    title dao
    // meta(name='viewport', content='user-scalable=yes, initial-scale=1.0, maximum-scale=1.4, width=device-width')
    meta(name='viewport', content='user-scalable=no, initial-scale=1.0, maximum-scale=1.0, width=device-width')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black')
    meta(name="msapplication-TileColor" content="#da532c")
    meta(name="theme-color" content="black")
    link(href="https://fonts.googleapis.com/css?family=Ubuntu:300,400&display=swap" rel="stylesheet")
    // link(href="https://fonts.googleapis.com/css?family=Roboto:300,400&display=swap" rel="stylesheet")
    //- script(src="https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js")

    link(rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png")
    link(rel="manifest" href="/site.webmanifest")

    script(src='https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js')

    link(rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.css")
    script(src="https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.4/dist/semantic.min.js")
    script(async src="https://www.googletagmanager.com/gtag/js?id=UA-156965333-1")

    // script(async='' src='https://platform.twitter.com/widgets.js' charset='utf-8')

    // script(src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")

    script.
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-156965333-1');



body
    +status
    +home
    

template(name='home')
    .ui.stackable.padded.grid
        .row
            .sixteen.wide.center.aligned.column
                i#clear_tags.link.yin.yang.big.icon(class=loading_class)
                if selected_tags
                    // if many_tags
                    //     a#clear_tags.ui.black.icon.small.compact.circular.button.select_term
                    //         i.remove.icon
                    each selected_tags
                        +unselect_tag
                .ui.inline.input 
                    input.search_title(type='text' autofocus='')
                each tag_results
                    +tag_selector
                .ui.circular.label(title='results') #{doc_count}
                // +view_mode key='twitter' icon='twitter' color='blue'
                +view_mode key='video' icon='youtube' color='red'
                +view_mode key='image' icon='picture' color='green'
                +view_mode key='posts' icon='newspaper' color='teal'
                +view_mode key='wikipedia' icon='wikipedia' color='purple'
                // .ui.inline.header 
                //     i.smile.large.grey.icon
                //     |emotion
                // +emotion_mode key='joy' icon='happy--v1' i2='smile' color='green'
                // +emotion_mode key='sadness' icon='sad--v1' i2='surprise' color='blue'
                // +emotion_mode key='anger' icon='angry--v1' i2='frown' color='red'
                // +emotion_mode key='disgust' icon='disgusting' i2='grin tongue squint' color='orange'
                // +emotion_mode key='fear' icon='scream' i2='tired' color='black'
                // i.grin.tongue.squint.outline.big.icon
                // i.surprise.outline.big.icon
                // i.smile.outline.big.icon
                // i.frown.outline.big.icon
                // i.tired.outline.big.icon
                each selected_emotions
                    .ui.black.circular.compact.button.unselect_emotion
                        |#{this}
                each emotion_results
                    if name
                        .ui.compact.circular.inverted.basic.button.select_emotion
                            |#{name}
                // +view_mode key='stackexchange' icon='stack exchange disabled'
                // +view_mode key='github' icon='github disabled'
                // +view_mode key='alpha' icon='disabled brain'
                // +view_mode key='porn' icon='mercury'
                // +view_mode key='bitcoin' icon='bitcoin disabled'
                // +view_mode key='covid' icon='covid disabled'
                // .spacer
                // .ui.inline.header 
                //     i.users.large.grey.icon
                //     |group
                // each selected_subreddits
                //     .ui.black.circular.compact.button.unselect_subreddit
                //         |#{this}
                // each subreddit_results
                //     +select_subreddit
                // // .spacer
                // .spacer
                // .ui.inline.header 
                //     i.database.large.icon
                //     |sources
                // each selected_models
                //     .ui.black.circular.compact.button.unselect_model
                //         |#{this}
                // each model_results
                //     .ui.compact.circular.button.select_model
                //         |#{name}
                // // i.smile.large.icon
                div
        .row
            // .five.wide.right.aligned.column
            .sixteen.wide.center.aligned.column
                .ui.centered.cards
                    each docs
                        if key_value 'model' 'porn'
                            +vid_card
                        else
                            +doc
                each alphas
                    if response.queryresult
                        +alpha 
                if many_tags
                    each alpha_singles
                        if response.queryresult
                            +alpha 
                each ducks
                    +duck 
                // .five.wide.column.scrolling
                // each docs
                // .eleven.wide.column
template(name="doc")
    .ui.card(class=card_class)
        // if embed
        //     .rounded.full
        //         |!{embed}
        // else
        if watson.metadata.image
            img.ui.rounded.inline.pointer.zoomer.image.toggle_view(src=watson.metadata.image)    
        else if is_image
            img.ui.centered.image(src=url)

        .content
            span.ui.pointer.text.invert.f13.zoomer.toggle_view(class=post_header_class) #{title}
                // small #{max_emotion_name}
            // |#{points}
                // unless one_post
                //     i.chevron.right.big.circular.grey.link.icon.forward
            if viewing_doc
                i.caret.down.big.grey.link.icon.vote_down
                i.caret.up.big.grey.link.icon.vote_up
                if is_image
                    img.ui.centered.image(src=url)
                |!{embed}
                // else if is_twitter
                //     blockquote.twitter-tweet(data-dnt='true' data-theme='dark')
                //         p(lang='en' dir='ltr')
                //             | Twitter Support you must have the patience of 1000 camels waiting for a drink of water while the baby camels get the first drinks...does that make sense? Thank you for your dedication and time you selfishly give to each of us. You are always appreciated.
                //         | â€” KayeMc76 (@KayeMc76) 
                //         a(href=url) October 3, 2020
                // else if is_youtube
                //     div
                //     .ui.fluid.embed
                //         iframe(id="ytplayer" type="text/html" width="100%" height="500" src="https://www.youtube.com/embed/#{youtube_parse}" frameborder="0" allowfullscreen)
                    // iframe(width="100%" height="600" src="https://www.youtube.com/embed/#{youtube_parse}?autoplay=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
                    // else if is_video
                    //     div
                    //     // iframe(width="100%" height="600" src="https://v.redd.it/9vk3khyb08e51/DASH_360.mp4?source=fallback" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
                    //     iframe(width="100%" height="600" src=url frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
                // else
                //     iframe(width="100%" height="500" src=url frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)        
                // .medscroll
                // 
                // a.ui.circular.label(href="https://www.reddit.com#{permalink}" target="_window") r/#{subreddit}
                // .ui.big.label 
                //     i.user.outline.icon
                //     |#{author}
                // .ui.circular.label
                //     i.thumbs.up.outline.icon
                //     |#{ups}
                // a.ui.inline.header(href=url target='_window')
                //     | #{url}
                // .ui.label
                //     | #{domain}
                // .spacer
                // .nl2br
                // |!{html}
                // .spacer
                // pre
                // .nl2br
                // if viewing
                
                +call_watson
                if watson    
                    unless tone
                        +call_tone    
                if parsed_selftext_html
                    .ui.segment
                        |!{parsed_selftext_html}
                else if selftext
                    .ui.segment
                        |{{nl2br selftext}}
                else if body
                    div
                    .ui.segment
                        |{{nl2br body}}
                // else if tone
                //     .spacer
                //     +tone
                // div(style='position:relative; padding-bottom:calc(125.00% + 44px)')
                //     iframe(src='https://gfycat.com/ifr/MeanFatAmurratsnake' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen)
                // |{{selftext}}
                // +convert
                a.ui.circular.icon.button(href=url target='_window' title=domain)
                    i.external.icon
                    // |#{domain}
                // a.ui.center.aligned.header(href=url target='_window' class=post_header_class title=url) #{title}

                // .spacer
                // div
                if tone
                    +tone
                //     +session_edit_value_button key='view_section' value='tone' label='tone' icon='smile'
                each tags
                    +doc_tag
                |#{tags.length}
                .ui.input
                    i.plus.grey.icon
                    input.tag_post(type='text')
                i.code.link.icon.print_me
            
            
template(name='select_subreddit')
    if name
        .ui.image.circular.pointer.zoomer.label.select_subreddit
            if tribe_doc
                img.ui.avatar.image(src=tribe_doc.rd.data.header_img)
            |#{name}

            
                    
                
template(name='view_mode')
    i.link.zoomer.icon.toggle_view(class=toggle_view_class title=key)


template(name='emotion_mode')
    if selected_emotion
        i.huge.pointer.zoomer.icon.toggle_emotion(class="#{i2} #{color}" title=title)
        // img.ui.inline.image.toggle_emotion.zoomer.pointer(src="https://img.icons8.com/color/50/000000/#{icon}.png" class=cl title=title)
    else
        i.big.grey.pointer.zoomer.icon.toggle_emotion(class="#{i2} outline")
        // img.ui.inline.image.toggle_emotion.zoomer.pointer(src="https://img.icons8.com/ios/36/000000/#{icon}.png" class=cl title=title)


template(name='session_edit_value_button')
    // .ui.circular.compact.button.set_session_value(class=calculated_class)
    a.ui.big.icon.circular.button.set_session_value(class=calculated_class)
        i.icon(class=icon)
        // +i name=icon cl='ui avatar image'
        // if label
        //     |#{label}
        // else 
        //     |#{value}


    
                    
template(name='pull_reddit')
    .ui.circular.icon.button.pull
        i.reddit.icon
        
template(name='call_watson')
    .ui.circular.icon.button.pull
        i.dna.icon

template(name='convert')
    .ui.circular.icon.button.convert
        i.exchange.icon


template(name='unselect_tag')
    a.unselect_tag.ui.black.big.image.circular.label.select_term(href='#')
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image)    
        strong #{this}

template(name='tag_selector')
    a.ui.big.image.circular.label.pointer.select_tag.select_term(href='#' title="#{count} results" class=selector_header_class)
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image)    
        | #{name}
        // small #{count}

template(name='doc_tag')
    a.ui.image.small.circular.label.pointer.select_tag.select_term(href='#' title="#{count} results" class=selector_header_class)
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image)    
        | #{this}
        // small #{count}

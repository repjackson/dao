template(name='home')
    .ui.stackable.grid
        .row
            .sixteen.wide.column
                // if selected_tags
                //     a#clear_tags.ui.black.icon.compact.large.button.select_term
                //         i.remove.icon
                each selected_tags
                    +unselect_tag
                .ui.left.icon.small.input 
                    i.search.icon
                    input.search_title(type='text' autofocus='')
                each tag_results
                    +tag_selector
                // .row
                //     .four.wide.right.aligned.column
                .ui.inline.small.header #{doc_count} results
                .ui.circular.compact.icon.button.set_list
                    i.list.icon
                .ui.circular.compact.icon.button.set_grid
                    i.th.icon
                .ui.circular.compact.icon.button.set_single
                    i.square.icon
                .ui.circular.compact.icon.disabled.button.set_single
                    i.twitter.icon
                .ui.circular.compact.icon.disabled.button.set_single
                    i.youtube.icon
                .ui.circular.compact.icon.disabled.button.set_single
                    i.reddit.icon
                .ui.circular.compact.icon.disabled.button.set_single
                    i.wikipedia.icon
                // .ui.circular.compact.icon.disabled.button.set_map
                //     i.map.icon
                // .ui.circular.compact.icon.button.set_porn
                //     i.exclamation.icon
                // .ui.circular.compact.button
                //     |1
                // .ui.circular.compact.button
                //     |5
                // .ui.circular.compact.button
                //     |10
                // div
                // .ui.inline.header
                i.globe.large.grey.icon
                // |domains
                if selected_domains
                    a#clear_domains.ui.black.icon.compact.large.circular.button.select_term
                        i.remove.icon
                    each selected_domains
                        a.unselect_domain.ui.black.compact.large.circular.button.select_termn
                            strong #{this}
                each domain_results
                    a.ui.compact.circular.basic.button.select_domain.select_term(href='#')
                        strong #{name}
                        small #{count}
                // .ui.stackable.centered.grid
                // div
                // .ui.inline.header
                //     i.reddit.icon
                //     |subreddits
                // if selected_subreddits
                //     a#clear_subreddits.ui.black.icon.compact.large.circular.button.select_term
                //         i.remove.icon
                //     each selected_subreddits
                //         a.unselect_subreddit.ui.black.compact.large.circular.button.select_termn
                //             strong #{this}
                // each subreddit_results
                //     a.ui.compact.circular.button.select_subreddit.select_term(href='#')
                //         strong #{name}
                //         small #{count}
                // // .ui.stackable.centered.grid
                // // div
                // .ui.inline.header
                i.database.large.grey.icon
                // |modelss
                if selected_models
                    a#clear_models.ui.black.icon.compact.large.circular.button.select_term
                        i.remove.icon
                    each selected_models
                        a.unselect_model.ui.black.compact.large.circular.button.select_termn
                            strong #{this}
                each model_results
                    a.ui.compact.circular.basic.button.select_model.select_term(href='#')
                        strong #{name}
                        small #{count}
                // .ui.stackable.centered.grid
                // +session_boolean_toggle key='view_authors' label='authors' icon='user outline'
                // if session_is 'view_authors'
                // .spacer
                // .ui.inline.header
                //     i.user.outline.icon
                //     |author
                // if selected_authors
                //     a#clear_authors.ui.black.icon.compact.large.circular.button.select_term
                //         i.remove.icon
                //     each selected_authors
                //         a.unselect_author.ui.black.compact.large.circular.button.select_termn
                //             strong #{this}
                // each author_results
                //     a.ui.compact.circular.button.select_author.select_term(href='#')
                //         strong #{name}
                //         small #{count}
                // .spacer
                // +session_boolean_toggle key='view_sources' label='sources' icon='database'
                // if session_is 'view_sources'
            .sixteen.wide.column.scrolling
                if session_key_value 'view_mode' 'list'
                    .ui.items
                        each docs
                            .item
                                if is_image
                                    img.ui.inline.small.rounded.image(src=url)
                                .content
                                    .ui.header #{title}
                                    .ui.label #{domain}
                                    .ui.label
                                        i.thumbs.up.outline.grey.icon
                                        |#{ups}
                                    // .ui.label
                                    //     i.reddit.icon
                                    //     |#{subreddit}
                                    a.ui.label(href=url target='_window') #{url}
                                    // +pull_reddit
                                    +call_watson
                                    each tags 
                                        .ui.label #{this}
                            .spacer
                else if session_key_value 'view_mode' 'grid'
                    .ui.stackable.centered.cards
                        each docs
                            .ui.card
                                if watson.metadata.image
                                    img.ui.image(src=watson.metadata.image class=currentUser.invert_class)    
                                else
                                    img.ui.image(src=url)
                                .content
                                    if is_twitter
                                        blockquote.twitter-tweet(data-dnt='true' data-theme='dark')
                                            p(lang='en' dir='ltr')
                                                |#{title}
                                                // | No, Joe. The "establishment" are the 60 billionaires who are funding your campaign and the corporate-funded super PACs that are spending millions on negative ads attacking me. 
                                                a(href='https://t.co/XDB8OwJB1L') https://t.co/XDB8OwJB1L
                                            | â€” Bernie Sanders (@BernieSanders) 
                                            a(href=url) March 4, 2020
                                        script(async='' src='https://platform.twitter.com/widgets.js' charset='utf-8')

                                    // .ui.header #{title}
                                    // |!{rd.selftext}
                                    blockquote(class="reddit-card")
                                        a(href="https://www.reddit.com#{permalink}") 
                                            |#{title}
                                        |from 
                                        a(href="http://www.reddit.com/r/#{subreddit}") 
                                            |r/#{subreddit}
                                    script(src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")
                                    a.ui.label.set_domain #{domain}
    
                                    .ui.basic.label 
                                        i.thumbs.up.outline.icon
                                        |#{ups}
                                    // .ui.label 
                                    //     i.reddit.icon
                                    //     |#{subreddit}
                                    .ui.large.circular.icon.basic.button(href=url target='_window' title=url)
                                        // |#{url}
                                        i.external.icon
                                    // +pull_reddit
                                    +call_watson
                                    each tags 
                                        .ui.small.basic.label.add_tag #{this}
                    // else if session_key_value 'view_mode' 'porn'
                    //     .ui.stackable.centered.cards
                    //         each docs
                    //             +vid_card
                else
                    if one_post
                        each docs
                            .sixteen.wide.column
                                +reddit_card
                    else
                        each docs
                            .sixteen.wide.column
                                +reddit_card
                                    // blockquote(class="reddit-card")
                                    //     a(href="https://www.reddit.com#{permalink}") 
                                    //         |#{title}
                                    //     |from 
                                    //     a(href="http://www.reddit.com/r/#{subreddit}") 
                                    //         |r/#{subreddit}
                                    // script(async src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")            
                    
template(name='pull_reddit')
    .ui.circular.icon.basic.button.pull
        i.reddit.icon
        
template(name='call_watson')
    .ui.circular.icon.basic.button.pull
        i.dna.icon

template(name='reddit_card')
    // .ui.header #{title}
    // .medscroll
    blockquote(class="reddit-card")
        a(href="https://www.reddit.com#{permalink}") 
            |#{title}
        |from 
        a(href="http://www.reddit.com/r/#{subreddit}") 
            |r/#{subreddit}
    script(src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")
    a.ui.fluid.basic.circular.button(href=url target='_window' title=url)
        i.external.icon
        |#{domain}
    |#{tags.length}
    each tags 
        .ui.circular.compact.button.add_tag #{this}
    .ui.transparent.input
        i.plus.grey.icon
        input.tag_post(type='text')
    // unless is_image
    //     iframe.invert(width="100%" height="500" src=url frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
    .ui.icon.circular.button.tagger
        i.dna.icon
    // if watson
    //     +watson_view

template(name='unselect_tag')
    a.unselect_tag.ui.black.big.image.label.select_term(href='#')
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image class=currentUser.invert_class)    
        strong #{this}

template(name='tag_selector')
    a.ui.big.image.basic.label.select_tag.select_term(href='#')
        // img.ui.avatar.compact.image(src="{{c.url term.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        // img.ui.avatar.compact.image(src=term.rd.thumbnail class=currentUser.invert_class)
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image class=currentUser.invert_class)    
        strong #{name}
        small #{count}



template(name='session_boolean_toggle')
    .ui.compact.large.circular.button.toggle_session_key(class=calculated_class)
        // +icolor name=icon cl='ui avatar image'
        i.icon(class=icon)
        |#{label}
        //- if icon_view 
        //- else 
            if label
                |#{label}
            else 
                |#{value}
                

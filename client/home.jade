template(name='home')
    .ui.stackable.grid
        .row
            .sixteen.wide.column
                each selected_tags
                    +unselect_tag
                .ui.left.icon.input 
                    i.search.icon
                    input.search_title(type='text' autofocus='')
                each tag_results
                    +tag_selector
        .row
            .four.wide.right.aligned.column
                .ui.inline.header
                    i.globe.icon
                    |domains
                if selected_domains
                    a#clear_domains.ui.black.icon.compact.large.circular.button.select_term
                        i.remove.icon
                    each selected_domains
                        a.unselect_domain.ui.black.compact.large.circular.button.select_termn
                            strong #{this}
                each domain_results
                    a.ui.compact.circular.button.select_domain.select_term(href='#')
                        strong #{name}
                // .ui.circular.compact.icon.button
                //     i.list.icon
                // .ui.circular.compact.icon.button
                //     i.th.icon
                // .ui.circular.compact.icon.button
                //     i.square.icon
                // .ui.circular.compact.button
                //     |1
                // .ui.circular.compact.button
                //     |5
                // .ui.circular.compact.button
                //     |10
                // .ui.stackable.centered.grid
                // +session_boolean_toggle key='view_authors' label='authors' icon='user outline'
                // if session_is 'view_authors'
                .spacer
                .ui.inline.header
                    i.user.outline.icon
                    |author
                if selected_authors
                    a#clear_authors.ui.black.icon.compact.large.circular.button.select_term
                        i.remove.icon
                    each selected_authors
                        a.unselect_author.ui.black.compact.large.circular.button.select_termn
                            strong #{this}
                each author_results
                    a.ui.compact.circular.button.select_author.select_term(href='#')
                        strong #{name}
                .spacer
                // +session_boolean_toggle key='view_sources' label='sources' icon='database'
                // if session_is 'view_sources'
            .twelve.wide.column
                if one_post
                    each docs
                        .sixteen.wide.column
                            +reddit_card
                else
                    each docs
                        .sixteen.wide.column
                            +reddit_card
                                // blockquote(class="reddit-card")
                                //     a(href="https://www.reddit.com#{permalink}") 
                                //         |#{title}
                                //     |from 
                                //     a(href="http://www.reddit.com/r/#{subreddit}") 
                                //         |r/#{subreddit}
                                // script(async src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")            
                    


template(name='reddit_card')
    .medscroll
        blockquote(class="reddit-card")
            a(href="https://www.reddit.com#{permalink}") 
                |#{title}
            |from 
            a(href="http://www.reddit.com/r/#{subreddit}") 
                |r/#{subreddit}
    script(src="//embed.redditmedia.com/widgets/platform.js" charset="UTF-8")
    a.ui.fluid.basic.button(href=url target='_window' title=url)
        i.external.icon
        |#{domain}
    // |#{tags.length}
    // each tags 
    //     .ui.circular.compact.button.add_tag #{this}
    // .ui.transparent.input
    //     i.plus.grey.icon
    //     input.tag_post(type='text')
    // unless is_image
    //     iframe.invert(width="100%" height="500" src=url frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen)
    // .ui.icon.circular.button.tagger
    //     i.dna.icon
    // if watson
    //     +watson_view

template(name='unselect_tag')
    a.unselect_tag.ui.black.big.image.label.select_term(href='#')
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image class=currentUser.invert_class)    
        | #{this}

template(name='tag_selector')
    a.ui.big.image.basic.label.select_tag.select_term(href='#')
        // img.ui.avatar.compact.image(src="{{c.url term.image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        // img.ui.avatar.compact.image(src=term.rd.thumbnail class=currentUser.invert_class)
        if term
            img.ui.avatar.compact.image(src=term.watson.metadata.image class=currentUser.invert_class)    
        | #{name}



template(name='session_boolean_toggle')
    .ui.compact.large.circular.button.toggle_session_key(class=calculated_class)
        // +icolor name=icon cl='ui avatar image'
        i.icon(class=icon)
        |#{label}
        //- if icon_view 
        //- else 
            if label
                |#{label}
            else 
                |#{value}
                
